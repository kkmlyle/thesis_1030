// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_tx_top_tx_Pipeline_loop_output (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cp_out_re_V_address0,
        cp_out_re_V_ce0,
        cp_out_re_V_we0,
        cp_out_re_V_d0,
        cp_out_re_V_address1,
        cp_out_re_V_ce1,
        cp_out_re_V_we1,
        cp_out_re_V_d1,
        tem_out1_M_real_address0,
        tem_out1_M_real_ce0,
        tem_out1_M_real_q0,
        tem_out1_M_imag_address0,
        tem_out1_M_imag_ce0,
        tem_out1_M_imag_q0,
        cp_out_im_V_address0,
        cp_out_im_V_ce0,
        cp_out_im_V_we0,
        cp_out_im_V_d0,
        cp_out_im_V_address1,
        cp_out_im_V_ce1,
        cp_out_im_V_we1,
        cp_out_im_V_d1,
        cp_out_re_V_1_address0,
        cp_out_re_V_1_ce0,
        cp_out_re_V_1_we0,
        cp_out_re_V_1_d0,
        cp_out_re_V_1_address1,
        cp_out_re_V_1_ce1,
        cp_out_re_V_1_we1,
        cp_out_re_V_1_d1,
        tem_out2_M_real_address0,
        tem_out2_M_real_ce0,
        tem_out2_M_real_q0,
        tem_out2_M_imag_address0,
        tem_out2_M_imag_ce0,
        tem_out2_M_imag_q0,
        cp_out_im_V_1_address0,
        cp_out_im_V_1_ce0,
        cp_out_im_V_1_we0,
        cp_out_im_V_1_d0,
        cp_out_im_V_1_address1,
        cp_out_im_V_1_ce1,
        cp_out_im_V_1_we1,
        cp_out_im_V_1_d1,
        cp_out_re_V_2_address0,
        cp_out_re_V_2_ce0,
        cp_out_re_V_2_we0,
        cp_out_re_V_2_d0,
        cp_out_re_V_2_address1,
        cp_out_re_V_2_ce1,
        cp_out_re_V_2_we1,
        cp_out_re_V_2_d1,
        tem_out3_M_real_address0,
        tem_out3_M_real_ce0,
        tem_out3_M_real_q0,
        tem_out3_M_imag_address0,
        tem_out3_M_imag_ce0,
        tem_out3_M_imag_q0,
        cp_out_im_V_2_address0,
        cp_out_im_V_2_ce0,
        cp_out_im_V_2_we0,
        cp_out_im_V_2_d0,
        cp_out_im_V_2_address1,
        cp_out_im_V_2_ce1,
        cp_out_im_V_2_we1,
        cp_out_im_V_2_d1,
        cp_out_re_V_3_address0,
        cp_out_re_V_3_ce0,
        cp_out_re_V_3_we0,
        cp_out_re_V_3_d0,
        cp_out_re_V_3_address1,
        cp_out_re_V_3_ce1,
        cp_out_re_V_3_we1,
        cp_out_re_V_3_d1,
        tem_out4_M_real_address0,
        tem_out4_M_real_ce0,
        tem_out4_M_real_q0,
        tem_out4_M_imag_address0,
        tem_out4_M_imag_ce0,
        tem_out4_M_imag_q0,
        cp_out_im_V_3_address0,
        cp_out_im_V_3_ce0,
        cp_out_im_V_3_we0,
        cp_out_im_V_3_d0,
        cp_out_im_V_3_address1,
        cp_out_im_V_3_ce1,
        cp_out_im_V_3_we1,
        cp_out_im_V_3_d1,
        cp_out_re_V_4_address0,
        cp_out_re_V_4_ce0,
        cp_out_re_V_4_we0,
        cp_out_re_V_4_d0,
        cp_out_re_V_4_address1,
        cp_out_re_V_4_ce1,
        cp_out_re_V_4_we1,
        cp_out_re_V_4_d1,
        tem_out5_M_real_address0,
        tem_out5_M_real_ce0,
        tem_out5_M_real_q0,
        tem_out5_M_imag_address0,
        tem_out5_M_imag_ce0,
        tem_out5_M_imag_q0,
        cp_out_im_V_4_address0,
        cp_out_im_V_4_ce0,
        cp_out_im_V_4_we0,
        cp_out_im_V_4_d0,
        cp_out_im_V_4_address1,
        cp_out_im_V_4_ce1,
        cp_out_im_V_4_we1,
        cp_out_im_V_4_d1,
        cp_out_re_V_5_address0,
        cp_out_re_V_5_ce0,
        cp_out_re_V_5_we0,
        cp_out_re_V_5_d0,
        cp_out_re_V_5_address1,
        cp_out_re_V_5_ce1,
        cp_out_re_V_5_we1,
        cp_out_re_V_5_d1,
        tem_out6_M_real_address0,
        tem_out6_M_real_ce0,
        tem_out6_M_real_q0,
        tem_out6_M_imag_address0,
        tem_out6_M_imag_ce0,
        tem_out6_M_imag_q0,
        cp_out_im_V_5_address0,
        cp_out_im_V_5_ce0,
        cp_out_im_V_5_we0,
        cp_out_im_V_5_d0,
        cp_out_im_V_5_address1,
        cp_out_im_V_5_ce1,
        cp_out_im_V_5_we1,
        cp_out_im_V_5_d1,
        cp_out_re_V_6_address0,
        cp_out_re_V_6_ce0,
        cp_out_re_V_6_we0,
        cp_out_re_V_6_d0,
        cp_out_re_V_6_address1,
        cp_out_re_V_6_ce1,
        cp_out_re_V_6_we1,
        cp_out_re_V_6_d1,
        tem_out7_M_real_address0,
        tem_out7_M_real_ce0,
        tem_out7_M_real_q0,
        tem_out7_M_imag_address0,
        tem_out7_M_imag_ce0,
        tem_out7_M_imag_q0,
        cp_out_im_V_6_address0,
        cp_out_im_V_6_ce0,
        cp_out_im_V_6_we0,
        cp_out_im_V_6_d0,
        cp_out_im_V_6_address1,
        cp_out_im_V_6_ce1,
        cp_out_im_V_6_we1,
        cp_out_im_V_6_d1,
        cp_out_re_V_7_address0,
        cp_out_re_V_7_ce0,
        cp_out_re_V_7_we0,
        cp_out_re_V_7_d0,
        cp_out_re_V_8_address0,
        cp_out_re_V_8_ce0,
        cp_out_re_V_8_we0,
        cp_out_re_V_8_d0,
        cp_out_re_V_9_address0,
        cp_out_re_V_9_ce0,
        cp_out_re_V_9_we0,
        cp_out_re_V_9_d0,
        cp_out_re_V_10_address0,
        cp_out_re_V_10_ce0,
        cp_out_re_V_10_we0,
        cp_out_re_V_10_d0,
        cp_out_re_V_11_address0,
        cp_out_re_V_11_ce0,
        cp_out_re_V_11_we0,
        cp_out_re_V_11_d0,
        cp_out_re_V_12_address0,
        cp_out_re_V_12_ce0,
        cp_out_re_V_12_we0,
        cp_out_re_V_12_d0,
        cp_out_re_V_13_address0,
        cp_out_re_V_13_ce0,
        cp_out_re_V_13_we0,
        cp_out_re_V_13_d0,
        cp_out_im_V_7_address0,
        cp_out_im_V_7_ce0,
        cp_out_im_V_7_we0,
        cp_out_im_V_7_d0,
        cp_out_im_V_8_address0,
        cp_out_im_V_8_ce0,
        cp_out_im_V_8_we0,
        cp_out_im_V_8_d0,
        cp_out_im_V_9_address0,
        cp_out_im_V_9_ce0,
        cp_out_im_V_9_we0,
        cp_out_im_V_9_d0,
        cp_out_im_V_10_address0,
        cp_out_im_V_10_ce0,
        cp_out_im_V_10_we0,
        cp_out_im_V_10_d0,
        cp_out_im_V_11_address0,
        cp_out_im_V_11_ce0,
        cp_out_im_V_11_we0,
        cp_out_im_V_11_d0,
        cp_out_im_V_12_address0,
        cp_out_im_V_12_ce0,
        cp_out_im_V_12_we0,
        cp_out_im_V_12_d0,
        cp_out_im_V_13_address0,
        cp_out_im_V_13_ce0,
        cp_out_im_V_13_we0,
        cp_out_im_V_13_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] cp_out_re_V_address0;
output   cp_out_re_V_ce0;
output   cp_out_re_V_we0;
output  [15:0] cp_out_re_V_d0;
output  [10:0] cp_out_re_V_address1;
output   cp_out_re_V_ce1;
output   cp_out_re_V_we1;
output  [15:0] cp_out_re_V_d1;
output  [10:0] tem_out1_M_real_address0;
output   tem_out1_M_real_ce0;
input  [15:0] tem_out1_M_real_q0;
output  [10:0] tem_out1_M_imag_address0;
output   tem_out1_M_imag_ce0;
input  [15:0] tem_out1_M_imag_q0;
output  [10:0] cp_out_im_V_address0;
output   cp_out_im_V_ce0;
output   cp_out_im_V_we0;
output  [15:0] cp_out_im_V_d0;
output  [10:0] cp_out_im_V_address1;
output   cp_out_im_V_ce1;
output   cp_out_im_V_we1;
output  [15:0] cp_out_im_V_d1;
output  [10:0] cp_out_re_V_1_address0;
output   cp_out_re_V_1_ce0;
output   cp_out_re_V_1_we0;
output  [15:0] cp_out_re_V_1_d0;
output  [10:0] cp_out_re_V_1_address1;
output   cp_out_re_V_1_ce1;
output   cp_out_re_V_1_we1;
output  [15:0] cp_out_re_V_1_d1;
output  [10:0] tem_out2_M_real_address0;
output   tem_out2_M_real_ce0;
input  [15:0] tem_out2_M_real_q0;
output  [10:0] tem_out2_M_imag_address0;
output   tem_out2_M_imag_ce0;
input  [15:0] tem_out2_M_imag_q0;
output  [10:0] cp_out_im_V_1_address0;
output   cp_out_im_V_1_ce0;
output   cp_out_im_V_1_we0;
output  [15:0] cp_out_im_V_1_d0;
output  [10:0] cp_out_im_V_1_address1;
output   cp_out_im_V_1_ce1;
output   cp_out_im_V_1_we1;
output  [15:0] cp_out_im_V_1_d1;
output  [10:0] cp_out_re_V_2_address0;
output   cp_out_re_V_2_ce0;
output   cp_out_re_V_2_we0;
output  [15:0] cp_out_re_V_2_d0;
output  [10:0] cp_out_re_V_2_address1;
output   cp_out_re_V_2_ce1;
output   cp_out_re_V_2_we1;
output  [15:0] cp_out_re_V_2_d1;
output  [10:0] tem_out3_M_real_address0;
output   tem_out3_M_real_ce0;
input  [15:0] tem_out3_M_real_q0;
output  [10:0] tem_out3_M_imag_address0;
output   tem_out3_M_imag_ce0;
input  [15:0] tem_out3_M_imag_q0;
output  [10:0] cp_out_im_V_2_address0;
output   cp_out_im_V_2_ce0;
output   cp_out_im_V_2_we0;
output  [15:0] cp_out_im_V_2_d0;
output  [10:0] cp_out_im_V_2_address1;
output   cp_out_im_V_2_ce1;
output   cp_out_im_V_2_we1;
output  [15:0] cp_out_im_V_2_d1;
output  [10:0] cp_out_re_V_3_address0;
output   cp_out_re_V_3_ce0;
output   cp_out_re_V_3_we0;
output  [15:0] cp_out_re_V_3_d0;
output  [10:0] cp_out_re_V_3_address1;
output   cp_out_re_V_3_ce1;
output   cp_out_re_V_3_we1;
output  [15:0] cp_out_re_V_3_d1;
output  [10:0] tem_out4_M_real_address0;
output   tem_out4_M_real_ce0;
input  [15:0] tem_out4_M_real_q0;
output  [10:0] tem_out4_M_imag_address0;
output   tem_out4_M_imag_ce0;
input  [15:0] tem_out4_M_imag_q0;
output  [10:0] cp_out_im_V_3_address0;
output   cp_out_im_V_3_ce0;
output   cp_out_im_V_3_we0;
output  [15:0] cp_out_im_V_3_d0;
output  [10:0] cp_out_im_V_3_address1;
output   cp_out_im_V_3_ce1;
output   cp_out_im_V_3_we1;
output  [15:0] cp_out_im_V_3_d1;
output  [10:0] cp_out_re_V_4_address0;
output   cp_out_re_V_4_ce0;
output   cp_out_re_V_4_we0;
output  [15:0] cp_out_re_V_4_d0;
output  [10:0] cp_out_re_V_4_address1;
output   cp_out_re_V_4_ce1;
output   cp_out_re_V_4_we1;
output  [15:0] cp_out_re_V_4_d1;
output  [10:0] tem_out5_M_real_address0;
output   tem_out5_M_real_ce0;
input  [15:0] tem_out5_M_real_q0;
output  [10:0] tem_out5_M_imag_address0;
output   tem_out5_M_imag_ce0;
input  [15:0] tem_out5_M_imag_q0;
output  [10:0] cp_out_im_V_4_address0;
output   cp_out_im_V_4_ce0;
output   cp_out_im_V_4_we0;
output  [15:0] cp_out_im_V_4_d0;
output  [10:0] cp_out_im_V_4_address1;
output   cp_out_im_V_4_ce1;
output   cp_out_im_V_4_we1;
output  [15:0] cp_out_im_V_4_d1;
output  [10:0] cp_out_re_V_5_address0;
output   cp_out_re_V_5_ce0;
output   cp_out_re_V_5_we0;
output  [15:0] cp_out_re_V_5_d0;
output  [10:0] cp_out_re_V_5_address1;
output   cp_out_re_V_5_ce1;
output   cp_out_re_V_5_we1;
output  [15:0] cp_out_re_V_5_d1;
output  [10:0] tem_out6_M_real_address0;
output   tem_out6_M_real_ce0;
input  [15:0] tem_out6_M_real_q0;
output  [10:0] tem_out6_M_imag_address0;
output   tem_out6_M_imag_ce0;
input  [15:0] tem_out6_M_imag_q0;
output  [10:0] cp_out_im_V_5_address0;
output   cp_out_im_V_5_ce0;
output   cp_out_im_V_5_we0;
output  [15:0] cp_out_im_V_5_d0;
output  [10:0] cp_out_im_V_5_address1;
output   cp_out_im_V_5_ce1;
output   cp_out_im_V_5_we1;
output  [15:0] cp_out_im_V_5_d1;
output  [10:0] cp_out_re_V_6_address0;
output   cp_out_re_V_6_ce0;
output   cp_out_re_V_6_we0;
output  [15:0] cp_out_re_V_6_d0;
output  [10:0] cp_out_re_V_6_address1;
output   cp_out_re_V_6_ce1;
output   cp_out_re_V_6_we1;
output  [15:0] cp_out_re_V_6_d1;
output  [10:0] tem_out7_M_real_address0;
output   tem_out7_M_real_ce0;
input  [15:0] tem_out7_M_real_q0;
output  [10:0] tem_out7_M_imag_address0;
output   tem_out7_M_imag_ce0;
input  [15:0] tem_out7_M_imag_q0;
output  [10:0] cp_out_im_V_6_address0;
output   cp_out_im_V_6_ce0;
output   cp_out_im_V_6_we0;
output  [15:0] cp_out_im_V_6_d0;
output  [10:0] cp_out_im_V_6_address1;
output   cp_out_im_V_6_ce1;
output   cp_out_im_V_6_we1;
output  [15:0] cp_out_im_V_6_d1;
output  [10:0] cp_out_re_V_7_address0;
output   cp_out_re_V_7_ce0;
output   cp_out_re_V_7_we0;
output  [0:0] cp_out_re_V_7_d0;
output  [10:0] cp_out_re_V_8_address0;
output   cp_out_re_V_8_ce0;
output   cp_out_re_V_8_we0;
output  [0:0] cp_out_re_V_8_d0;
output  [10:0] cp_out_re_V_9_address0;
output   cp_out_re_V_9_ce0;
output   cp_out_re_V_9_we0;
output  [0:0] cp_out_re_V_9_d0;
output  [10:0] cp_out_re_V_10_address0;
output   cp_out_re_V_10_ce0;
output   cp_out_re_V_10_we0;
output  [0:0] cp_out_re_V_10_d0;
output  [10:0] cp_out_re_V_11_address0;
output   cp_out_re_V_11_ce0;
output   cp_out_re_V_11_we0;
output  [0:0] cp_out_re_V_11_d0;
output  [10:0] cp_out_re_V_12_address0;
output   cp_out_re_V_12_ce0;
output   cp_out_re_V_12_we0;
output  [0:0] cp_out_re_V_12_d0;
output  [10:0] cp_out_re_V_13_address0;
output   cp_out_re_V_13_ce0;
output   cp_out_re_V_13_we0;
output  [0:0] cp_out_re_V_13_d0;
output  [10:0] cp_out_im_V_7_address0;
output   cp_out_im_V_7_ce0;
output   cp_out_im_V_7_we0;
output  [0:0] cp_out_im_V_7_d0;
output  [10:0] cp_out_im_V_8_address0;
output   cp_out_im_V_8_ce0;
output   cp_out_im_V_8_we0;
output  [0:0] cp_out_im_V_8_d0;
output  [10:0] cp_out_im_V_9_address0;
output   cp_out_im_V_9_ce0;
output   cp_out_im_V_9_we0;
output  [0:0] cp_out_im_V_9_d0;
output  [10:0] cp_out_im_V_10_address0;
output   cp_out_im_V_10_ce0;
output   cp_out_im_V_10_we0;
output  [0:0] cp_out_im_V_10_d0;
output  [10:0] cp_out_im_V_11_address0;
output   cp_out_im_V_11_ce0;
output   cp_out_im_V_11_we0;
output  [0:0] cp_out_im_V_11_d0;
output  [10:0] cp_out_im_V_12_address0;
output   cp_out_im_V_12_ce0;
output   cp_out_im_V_12_we0;
output  [0:0] cp_out_im_V_12_d0;
output  [10:0] cp_out_im_V_13_address0;
output   cp_out_im_V_13_ce0;
output   cp_out_im_V_13_we0;
output  [0:0] cp_out_im_V_13_d0;

reg ap_idle;
reg cp_out_re_V_ce0;
reg cp_out_re_V_we0;
reg cp_out_re_V_ce1;
reg cp_out_re_V_we1;
reg tem_out1_M_real_ce0;
reg tem_out1_M_imag_ce0;
reg cp_out_im_V_ce0;
reg cp_out_im_V_we0;
reg cp_out_im_V_ce1;
reg cp_out_im_V_we1;
reg cp_out_re_V_1_ce0;
reg cp_out_re_V_1_we0;
reg cp_out_re_V_1_ce1;
reg cp_out_re_V_1_we1;
reg tem_out2_M_real_ce0;
reg tem_out2_M_imag_ce0;
reg cp_out_im_V_1_ce0;
reg cp_out_im_V_1_we0;
reg cp_out_im_V_1_ce1;
reg cp_out_im_V_1_we1;
reg cp_out_re_V_2_ce0;
reg cp_out_re_V_2_we0;
reg cp_out_re_V_2_ce1;
reg cp_out_re_V_2_we1;
reg tem_out3_M_real_ce0;
reg tem_out3_M_imag_ce0;
reg cp_out_im_V_2_ce0;
reg cp_out_im_V_2_we0;
reg cp_out_im_V_2_ce1;
reg cp_out_im_V_2_we1;
reg cp_out_re_V_3_ce0;
reg cp_out_re_V_3_we0;
reg cp_out_re_V_3_ce1;
reg cp_out_re_V_3_we1;
reg tem_out4_M_real_ce0;
reg tem_out4_M_imag_ce0;
reg cp_out_im_V_3_ce0;
reg cp_out_im_V_3_we0;
reg cp_out_im_V_3_ce1;
reg cp_out_im_V_3_we1;
reg cp_out_re_V_4_ce0;
reg cp_out_re_V_4_we0;
reg cp_out_re_V_4_ce1;
reg cp_out_re_V_4_we1;
reg tem_out5_M_real_ce0;
reg tem_out5_M_imag_ce0;
reg cp_out_im_V_4_ce0;
reg cp_out_im_V_4_we0;
reg cp_out_im_V_4_ce1;
reg cp_out_im_V_4_we1;
reg cp_out_re_V_5_ce0;
reg cp_out_re_V_5_we0;
reg cp_out_re_V_5_ce1;
reg cp_out_re_V_5_we1;
reg tem_out6_M_real_ce0;
reg tem_out6_M_imag_ce0;
reg cp_out_im_V_5_ce0;
reg cp_out_im_V_5_we0;
reg cp_out_im_V_5_ce1;
reg cp_out_im_V_5_we1;
reg cp_out_re_V_6_ce0;
reg cp_out_re_V_6_we0;
reg cp_out_re_V_6_ce1;
reg cp_out_re_V_6_we1;
reg tem_out7_M_real_ce0;
reg tem_out7_M_imag_ce0;
reg cp_out_im_V_6_ce0;
reg cp_out_im_V_6_we0;
reg cp_out_im_V_6_ce1;
reg cp_out_im_V_6_we1;
reg cp_out_re_V_7_ce0;
reg cp_out_re_V_7_we0;
reg cp_out_re_V_8_ce0;
reg cp_out_re_V_8_we0;
reg cp_out_re_V_9_ce0;
reg cp_out_re_V_9_we0;
reg cp_out_re_V_10_ce0;
reg cp_out_re_V_10_we0;
reg cp_out_re_V_11_ce0;
reg cp_out_re_V_11_we0;
reg cp_out_re_V_12_ce0;
reg cp_out_re_V_12_we0;
reg cp_out_re_V_13_ce0;
reg cp_out_re_V_13_we0;
reg cp_out_im_V_7_ce0;
reg cp_out_im_V_7_we0;
reg cp_out_im_V_8_ce0;
reg cp_out_im_V_8_we0;
reg cp_out_im_V_9_ce0;
reg cp_out_im_V_9_we0;
reg cp_out_im_V_10_ce0;
reg cp_out_im_V_10_we0;
reg cp_out_im_V_11_ce0;
reg cp_out_im_V_11_we0;
reg cp_out_im_V_12_ce0;
reg cp_out_im_V_12_we0;
reg cp_out_im_V_13_ce0;
reg cp_out_im_V_13_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln171_fu_1025_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] i_2_cast24_fu_1037_p1;
reg   [63:0] i_2_cast24_reg_1577;
wire   [0:0] icmp_ln173_fu_1043_p2;
reg   [0:0] icmp_ln173_reg_1583;
wire   [0:0] and_ln180_fu_1061_p2;
reg   [0:0] and_ln180_reg_1597;
wire   [10:0] select_ln184_fu_1079_p3;
reg   [10:0] select_ln184_reg_1601;
wire   [0:0] and_ln187_fu_1099_p2;
reg   [0:0] and_ln187_reg_1616;
wire   [0:0] and_ln194_fu_1129_p2;
reg   [0:0] and_ln194_reg_1630;
wire   [0:0] and_ln201_fu_1159_p2;
reg   [0:0] and_ln201_reg_1644;
wire   [0:0] and_ln208_fu_1189_p2;
reg   [0:0] and_ln208_reg_1658;
wire   [0:0] and_ln215_fu_1219_p2;
reg   [0:0] and_ln215_reg_1672;
wire   [0:0] icmp_ln222_fu_1240_p2;
reg   [0:0] icmp_ln222_reg_1686;
reg   [0:0] icmp_ln222_reg_1686_pp0_iter2_reg;
wire   [63:0] zext_ln224_fu_1255_p1;
reg   [63:0] zext_ln224_reg_1690;
reg   [63:0] zext_ln224_reg_1690_pp0_iter2_reg;
wire   [3:0] trunc_ln2_fu_1273_p4;
reg   [3:0] trunc_ln2_reg_1708;
reg   [3:0] trunc_ln2_reg_1708_pp0_iter2_reg;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln184_fu_1073_p1;
wire   [63:0] zext_ln191_fu_1111_p1;
wire   [63:0] zext_ln198_fu_1141_p1;
wire   [63:0] zext_ln205_fu_1171_p1;
wire   [63:0] zext_ln212_fu_1201_p1;
wire   [63:0] zext_ln219_fu_1231_p1;
wire   [63:0] zext_ln184_1_fu_1321_p1;
wire   [63:0] zext_ln191_1_fu_1329_p1;
wire   [63:0] zext_ln198_1_fu_1338_p1;
wire   [63:0] zext_ln205_1_fu_1347_p1;
wire   [63:0] zext_ln212_1_fu_1356_p1;
wire   [63:0] zext_ln219_1_fu_1365_p1;
reg   [13:0] phi_urem15_fu_190;
wire   [13:0] select_ln171_fu_1298_p3;
wire    ap_loop_init;
reg   [13:0] phi_urem12_fu_194;
wire   [13:0] select_ln171_1_fu_1398_p3;
reg   [13:0] phi_urem9_fu_198;
wire   [13:0] select_ln171_2_fu_1418_p3;
reg   [13:0] phi_urem6_fu_202;
wire   [13:0] select_ln171_3_fu_1438_p3;
reg   [13:0] phi_urem3_fu_206;
wire   [13:0] select_ln171_4_fu_1458_p3;
reg   [13:0] phi_urem_fu_210;
wire   [13:0] select_ln171_5_fu_1478_p3;
reg   [28:0] phi_mul_fu_214;
wire   [28:0] add_ln222_fu_1246_p2;
reg   [13:0] i_2_fu_218;
wire   [13:0] add_ln171_fu_1031_p2;
wire   [0:0] icmp_ln180_fu_1049_p2;
wire   [0:0] icmp_ln180_1_fu_1055_p2;
wire   [10:0] empty_fu_1021_p1;
wire   [10:0] add_ln184_fu_1067_p2;
wire   [0:0] icmp_ln187_fu_1087_p2;
wire   [0:0] icmp_ln187_1_fu_1093_p2;
wire   [10:0] add_ln191_fu_1105_p2;
wire   [0:0] icmp_ln194_fu_1117_p2;
wire   [0:0] icmp_ln194_1_fu_1123_p2;
wire   [10:0] add_ln198_fu_1135_p2;
wire   [0:0] icmp_ln201_fu_1147_p2;
wire   [0:0] icmp_ln201_1_fu_1153_p2;
wire   [10:0] add_ln205_fu_1165_p2;
wire   [0:0] icmp_ln208_fu_1177_p2;
wire   [0:0] icmp_ln208_1_fu_1183_p2;
wire   [10:0] add_ln212_fu_1195_p2;
wire   [0:0] icmp_ln215_fu_1207_p2;
wire   [0:0] icmp_ln215_1_fu_1213_p2;
wire   [10:0] add_ln219_fu_1225_p2;
wire   [13:0] add_ln171_1_fu_1286_p2;
wire   [0:0] icmp_ln171_1_fu_1292_p2;
wire   [13:0] add_ln171_2_fu_1386_p2;
wire   [0:0] icmp_ln171_2_fu_1392_p2;
wire   [13:0] add_ln171_3_fu_1406_p2;
wire   [0:0] icmp_ln171_3_fu_1412_p2;
wire   [13:0] add_ln171_4_fu_1426_p2;
wire   [0:0] icmp_ln171_4_fu_1432_p2;
wire   [13:0] add_ln171_5_fu_1446_p2;
wire   [0:0] icmp_ln171_5_fu_1452_p2;
wire   [13:0] add_ln171_6_fu_1466_p2;
wire   [0:0] icmp_ln171_6_fu_1472_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

top_tx_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_2_fu_218 <= 14'd0;
        end else if (((icmp_ln171_fu_1025_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_2_fu_218 <= add_ln171_fu_1031_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_mul_fu_214 <= 29'd0;
        end else if (((icmp_ln171_fu_1025_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            phi_mul_fu_214 <= add_ln222_fu_1246_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_urem12_fu_194 <= 14'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            phi_urem12_fu_194 <= select_ln171_1_fu_1398_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_urem15_fu_190 <= 14'd0;
        end else if (((icmp_ln171_fu_1025_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            phi_urem15_fu_190 <= select_ln171_fu_1298_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_urem3_fu_206 <= 14'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            phi_urem3_fu_206 <= select_ln171_4_fu_1458_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_urem6_fu_202 <= 14'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            phi_urem6_fu_202 <= select_ln171_3_fu_1438_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_urem9_fu_198 <= 14'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            phi_urem9_fu_198 <= select_ln171_2_fu_1418_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_urem_fu_210 <= 14'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            phi_urem_fu_210 <= select_ln171_5_fu_1478_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln171_fu_1025_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln180_reg_1597 <= and_ln180_fu_1061_p2;
        and_ln187_reg_1616 <= and_ln187_fu_1099_p2;
        and_ln194_reg_1630 <= and_ln194_fu_1129_p2;
        and_ln201_reg_1644 <= and_ln201_fu_1159_p2;
        and_ln208_reg_1658 <= and_ln208_fu_1189_p2;
        and_ln215_reg_1672 <= and_ln215_fu_1219_p2;
        i_2_cast24_reg_1577[13 : 0] <= i_2_cast24_fu_1037_p1[13 : 0];
        icmp_ln173_reg_1583 <= icmp_ln173_fu_1043_p2;
        icmp_ln222_reg_1686 <= icmp_ln222_fu_1240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln222_reg_1686_pp0_iter2_reg <= icmp_ln222_reg_1686;
        trunc_ln2_reg_1708_pp0_iter2_reg <= trunc_ln2_reg_1708;
        zext_ln224_reg_1690_pp0_iter2_reg[13 : 0] <= zext_ln224_reg_1690[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln180_fu_1061_p2) & (icmp_ln171_fu_1025_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln184_reg_1601 <= select_ln184_fu_1079_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln2_reg_1708 <= {{phi_mul_fu_214[28:25]}};
        zext_ln224_reg_1690[13 : 0] <= zext_ln224_fu_1255_p1[13 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_1025_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_im_V_10_ce0 = 1'b1;
    end else begin
        cp_out_im_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_fu_1273_p4 == 4'd10) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_im_V_10_we0 = 1'b1;
    end else begin
        cp_out_im_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_im_V_11_ce0 = 1'b1;
    end else begin
        cp_out_im_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_fu_1273_p4 == 4'd11) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_im_V_11_we0 = 1'b1;
    end else begin
        cp_out_im_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_im_V_12_ce0 = 1'b1;
    end else begin
        cp_out_im_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_fu_1273_p4 == 4'd12) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_im_V_12_we0 = 1'b1;
    end else begin
        cp_out_im_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_im_V_13_ce0 = 1'b1;
    end else begin
        cp_out_im_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((((trunc_ln2_fu_1273_p4 == 4'd14) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0)) | ((trunc_ln2_fu_1273_p4 == 4'd15) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0))) | ((trunc_ln2_fu_1273_p4 == 4'd13) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0))))) begin
        cp_out_im_V_13_we0 = 1'b1;
    end else begin
        cp_out_im_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_im_V_1_ce0 = 1'b1;
    end else begin
        cp_out_im_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_im_V_1_ce1 = 1'b1;
    end else begin
        cp_out_im_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_reg_1708_pp0_iter2_reg == 4'd1) & (icmp_ln222_reg_1686_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_im_V_1_we0 = 1'b1;
    end else begin
        cp_out_im_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln180_reg_1597) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_im_V_1_we1 = 1'b1;
    end else begin
        cp_out_im_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_im_V_2_ce0 = 1'b1;
    end else begin
        cp_out_im_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_im_V_2_ce1 = 1'b1;
    end else begin
        cp_out_im_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_reg_1708_pp0_iter2_reg == 4'd2) & (icmp_ln222_reg_1686_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_im_V_2_we0 = 1'b1;
    end else begin
        cp_out_im_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln187_reg_1616) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_im_V_2_we1 = 1'b1;
    end else begin
        cp_out_im_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_im_V_3_ce0 = 1'b1;
    end else begin
        cp_out_im_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_im_V_3_ce1 = 1'b1;
    end else begin
        cp_out_im_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_reg_1708_pp0_iter2_reg == 4'd3) & (icmp_ln222_reg_1686_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_im_V_3_we0 = 1'b1;
    end else begin
        cp_out_im_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln194_reg_1630) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_im_V_3_we1 = 1'b1;
    end else begin
        cp_out_im_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_im_V_4_ce0 = 1'b1;
    end else begin
        cp_out_im_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_im_V_4_ce1 = 1'b1;
    end else begin
        cp_out_im_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_reg_1708_pp0_iter2_reg == 4'd4) & (icmp_ln222_reg_1686_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_im_V_4_we0 = 1'b1;
    end else begin
        cp_out_im_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln201_reg_1644) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_im_V_4_we1 = 1'b1;
    end else begin
        cp_out_im_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_im_V_5_ce0 = 1'b1;
    end else begin
        cp_out_im_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_im_V_5_ce1 = 1'b1;
    end else begin
        cp_out_im_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_reg_1708_pp0_iter2_reg == 4'd5) & (icmp_ln222_reg_1686_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_im_V_5_we0 = 1'b1;
    end else begin
        cp_out_im_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln208_reg_1658) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_im_V_5_we1 = 1'b1;
    end else begin
        cp_out_im_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_im_V_6_ce0 = 1'b1;
    end else begin
        cp_out_im_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_im_V_6_ce1 = 1'b1;
    end else begin
        cp_out_im_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_reg_1708_pp0_iter2_reg == 4'd6) & (icmp_ln222_reg_1686_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_im_V_6_we0 = 1'b1;
    end else begin
        cp_out_im_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln215_reg_1672) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_im_V_6_we1 = 1'b1;
    end else begin
        cp_out_im_V_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_im_V_7_ce0 = 1'b1;
    end else begin
        cp_out_im_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_fu_1273_p4 == 4'd7) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_im_V_7_we0 = 1'b1;
    end else begin
        cp_out_im_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_im_V_8_ce0 = 1'b1;
    end else begin
        cp_out_im_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_fu_1273_p4 == 4'd8) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_im_V_8_we0 = 1'b1;
    end else begin
        cp_out_im_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_im_V_9_ce0 = 1'b1;
    end else begin
        cp_out_im_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_fu_1273_p4 == 4'd9) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_im_V_9_we0 = 1'b1;
    end else begin
        cp_out_im_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_im_V_ce0 = 1'b1;
    end else begin
        cp_out_im_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_im_V_ce1 = 1'b1;
    end else begin
        cp_out_im_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_reg_1708_pp0_iter2_reg == 4'd0) & (icmp_ln222_reg_1686_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_im_V_we0 = 1'b1;
    end else begin
        cp_out_im_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln173_reg_1583 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_im_V_we1 = 1'b1;
    end else begin
        cp_out_im_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_re_V_10_ce0 = 1'b1;
    end else begin
        cp_out_re_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_fu_1273_p4 == 4'd10) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_re_V_10_we0 = 1'b1;
    end else begin
        cp_out_re_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_re_V_11_ce0 = 1'b1;
    end else begin
        cp_out_re_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_fu_1273_p4 == 4'd11) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_re_V_11_we0 = 1'b1;
    end else begin
        cp_out_re_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_re_V_12_ce0 = 1'b1;
    end else begin
        cp_out_re_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_fu_1273_p4 == 4'd12) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_re_V_12_we0 = 1'b1;
    end else begin
        cp_out_re_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_re_V_13_ce0 = 1'b1;
    end else begin
        cp_out_re_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((((trunc_ln2_fu_1273_p4 == 4'd14) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0)) | ((trunc_ln2_fu_1273_p4 == 4'd15) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0))) | ((trunc_ln2_fu_1273_p4 == 4'd13) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0))))) begin
        cp_out_re_V_13_we0 = 1'b1;
    end else begin
        cp_out_re_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_re_V_1_ce0 = 1'b1;
    end else begin
        cp_out_re_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_re_V_1_ce1 = 1'b1;
    end else begin
        cp_out_re_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_reg_1708_pp0_iter2_reg == 4'd1) & (icmp_ln222_reg_1686_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_re_V_1_we0 = 1'b1;
    end else begin
        cp_out_re_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln180_reg_1597) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_re_V_1_we1 = 1'b1;
    end else begin
        cp_out_re_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_re_V_2_ce0 = 1'b1;
    end else begin
        cp_out_re_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_re_V_2_ce1 = 1'b1;
    end else begin
        cp_out_re_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_reg_1708_pp0_iter2_reg == 4'd2) & (icmp_ln222_reg_1686_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_re_V_2_we0 = 1'b1;
    end else begin
        cp_out_re_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln187_reg_1616) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_re_V_2_we1 = 1'b1;
    end else begin
        cp_out_re_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_re_V_3_ce0 = 1'b1;
    end else begin
        cp_out_re_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_re_V_3_ce1 = 1'b1;
    end else begin
        cp_out_re_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_reg_1708_pp0_iter2_reg == 4'd3) & (icmp_ln222_reg_1686_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_re_V_3_we0 = 1'b1;
    end else begin
        cp_out_re_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln194_reg_1630) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_re_V_3_we1 = 1'b1;
    end else begin
        cp_out_re_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_re_V_4_ce0 = 1'b1;
    end else begin
        cp_out_re_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_re_V_4_ce1 = 1'b1;
    end else begin
        cp_out_re_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_reg_1708_pp0_iter2_reg == 4'd4) & (icmp_ln222_reg_1686_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_re_V_4_we0 = 1'b1;
    end else begin
        cp_out_re_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln201_reg_1644) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_re_V_4_we1 = 1'b1;
    end else begin
        cp_out_re_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_re_V_5_ce0 = 1'b1;
    end else begin
        cp_out_re_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_re_V_5_ce1 = 1'b1;
    end else begin
        cp_out_re_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_reg_1708_pp0_iter2_reg == 4'd5) & (icmp_ln222_reg_1686_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_re_V_5_we0 = 1'b1;
    end else begin
        cp_out_re_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln208_reg_1658) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_re_V_5_we1 = 1'b1;
    end else begin
        cp_out_re_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_re_V_6_ce0 = 1'b1;
    end else begin
        cp_out_re_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_re_V_6_ce1 = 1'b1;
    end else begin
        cp_out_re_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_reg_1708_pp0_iter2_reg == 4'd6) & (icmp_ln222_reg_1686_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_re_V_6_we0 = 1'b1;
    end else begin
        cp_out_re_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln215_reg_1672) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_re_V_6_we1 = 1'b1;
    end else begin
        cp_out_re_V_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_re_V_7_ce0 = 1'b1;
    end else begin
        cp_out_re_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_fu_1273_p4 == 4'd7) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_re_V_7_we0 = 1'b1;
    end else begin
        cp_out_re_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_re_V_8_ce0 = 1'b1;
    end else begin
        cp_out_re_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_fu_1273_p4 == 4'd8) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_re_V_8_we0 = 1'b1;
    end else begin
        cp_out_re_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_re_V_9_ce0 = 1'b1;
    end else begin
        cp_out_re_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_fu_1273_p4 == 4'd9) & (icmp_ln222_fu_1240_p2 == 1'd1) & (icmp_ln171_fu_1025_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cp_out_re_V_9_we0 = 1'b1;
    end else begin
        cp_out_re_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_re_V_ce0 = 1'b1;
    end else begin
        cp_out_re_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_re_V_ce1 = 1'b1;
    end else begin
        cp_out_re_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln2_reg_1708_pp0_iter2_reg == 4'd0) & (icmp_ln222_reg_1686_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cp_out_re_V_we0 = 1'b1;
    end else begin
        cp_out_re_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln173_reg_1583 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cp_out_re_V_we1 = 1'b1;
    end else begin
        cp_out_re_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tem_out1_M_imag_ce0 = 1'b1;
    end else begin
        tem_out1_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tem_out1_M_real_ce0 = 1'b1;
    end else begin
        tem_out1_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tem_out2_M_imag_ce0 = 1'b1;
    end else begin
        tem_out2_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tem_out2_M_real_ce0 = 1'b1;
    end else begin
        tem_out2_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tem_out3_M_imag_ce0 = 1'b1;
    end else begin
        tem_out3_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tem_out3_M_real_ce0 = 1'b1;
    end else begin
        tem_out3_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tem_out4_M_imag_ce0 = 1'b1;
    end else begin
        tem_out4_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tem_out4_M_real_ce0 = 1'b1;
    end else begin
        tem_out4_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tem_out5_M_imag_ce0 = 1'b1;
    end else begin
        tem_out5_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tem_out5_M_real_ce0 = 1'b1;
    end else begin
        tem_out5_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tem_out6_M_imag_ce0 = 1'b1;
    end else begin
        tem_out6_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tem_out6_M_real_ce0 = 1'b1;
    end else begin
        tem_out6_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tem_out7_M_imag_ce0 = 1'b1;
    end else begin
        tem_out7_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tem_out7_M_real_ce0 = 1'b1;
    end else begin
        tem_out7_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln171_1_fu_1286_p2 = (phi_urem15_fu_190 + 14'd1);

assign add_ln171_2_fu_1386_p2 = (phi_urem12_fu_194 + 14'd1);

assign add_ln171_3_fu_1406_p2 = (phi_urem9_fu_198 + 14'd1);

assign add_ln171_4_fu_1426_p2 = (phi_urem6_fu_202 + 14'd1);

assign add_ln171_5_fu_1446_p2 = (phi_urem3_fu_206 + 14'd1);

assign add_ln171_6_fu_1466_p2 = (phi_urem_fu_210 + 14'd1);

assign add_ln171_fu_1031_p2 = (i_2_fu_218 + 14'd1);

assign add_ln184_fu_1067_p2 = (empty_fu_1021_p1 + 11'd880);

assign add_ln191_fu_1105_p2 = ($signed(empty_fu_1021_p1) + $signed(11'd1760));

assign add_ln198_fu_1135_p2 = (empty_fu_1021_p1 + 11'd592);

assign add_ln205_fu_1165_p2 = ($signed(empty_fu_1021_p1) + $signed(11'd1472));

assign add_ln212_fu_1195_p2 = (empty_fu_1021_p1 + 11'd304);

assign add_ln219_fu_1225_p2 = ($signed(empty_fu_1021_p1) + $signed(11'd1184));

assign add_ln222_fu_1246_p2 = (phi_mul_fu_214 + 29'd28729);

assign and_ln180_fu_1061_p2 = (icmp_ln180_fu_1049_p2 & icmp_ln180_1_fu_1055_p2);

assign and_ln187_fu_1099_p2 = (icmp_ln187_fu_1087_p2 & icmp_ln187_1_fu_1093_p2);

assign and_ln194_fu_1129_p2 = (icmp_ln194_fu_1117_p2 & icmp_ln194_1_fu_1123_p2);

assign and_ln201_fu_1159_p2 = (icmp_ln201_fu_1147_p2 & icmp_ln201_1_fu_1153_p2);

assign and_ln208_fu_1189_p2 = (icmp_ln208_fu_1177_p2 & icmp_ln208_1_fu_1183_p2);

assign and_ln215_fu_1219_p2 = (icmp_ln215_fu_1207_p2 & icmp_ln215_1_fu_1213_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign cp_out_im_V_10_address0 = zext_ln224_fu_1255_p1;

assign cp_out_im_V_10_d0 = 1'd0;

assign cp_out_im_V_11_address0 = zext_ln224_fu_1255_p1;

assign cp_out_im_V_11_d0 = 1'd0;

assign cp_out_im_V_12_address0 = zext_ln224_fu_1255_p1;

assign cp_out_im_V_12_d0 = 1'd0;

assign cp_out_im_V_13_address0 = zext_ln224_fu_1255_p1;

assign cp_out_im_V_13_d0 = 1'd0;

assign cp_out_im_V_1_address0 = zext_ln224_reg_1690_pp0_iter2_reg;

assign cp_out_im_V_1_address1 = zext_ln184_1_fu_1321_p1;

assign cp_out_im_V_1_d0 = 16'd0;

assign cp_out_im_V_1_d1 = tem_out2_M_imag_q0;

assign cp_out_im_V_2_address0 = zext_ln224_reg_1690_pp0_iter2_reg;

assign cp_out_im_V_2_address1 = zext_ln191_1_fu_1329_p1;

assign cp_out_im_V_2_d0 = 16'd0;

assign cp_out_im_V_2_d1 = tem_out3_M_imag_q0;

assign cp_out_im_V_3_address0 = zext_ln224_reg_1690_pp0_iter2_reg;

assign cp_out_im_V_3_address1 = zext_ln198_1_fu_1338_p1;

assign cp_out_im_V_3_d0 = 16'd0;

assign cp_out_im_V_3_d1 = tem_out4_M_imag_q0;

assign cp_out_im_V_4_address0 = zext_ln224_reg_1690_pp0_iter2_reg;

assign cp_out_im_V_4_address1 = zext_ln205_1_fu_1347_p1;

assign cp_out_im_V_4_d0 = 16'd0;

assign cp_out_im_V_4_d1 = tem_out5_M_imag_q0;

assign cp_out_im_V_5_address0 = zext_ln224_reg_1690_pp0_iter2_reg;

assign cp_out_im_V_5_address1 = zext_ln212_1_fu_1356_p1;

assign cp_out_im_V_5_d0 = 16'd0;

assign cp_out_im_V_5_d1 = tem_out6_M_imag_q0;

assign cp_out_im_V_6_address0 = zext_ln224_reg_1690_pp0_iter2_reg;

assign cp_out_im_V_6_address1 = zext_ln219_1_fu_1365_p1;

assign cp_out_im_V_6_d0 = 16'd0;

assign cp_out_im_V_6_d1 = tem_out7_M_imag_q0;

assign cp_out_im_V_7_address0 = zext_ln224_fu_1255_p1;

assign cp_out_im_V_7_d0 = 1'd0;

assign cp_out_im_V_8_address0 = zext_ln224_fu_1255_p1;

assign cp_out_im_V_8_d0 = 1'd0;

assign cp_out_im_V_9_address0 = zext_ln224_fu_1255_p1;

assign cp_out_im_V_9_d0 = 1'd0;

assign cp_out_im_V_address0 = zext_ln224_reg_1690_pp0_iter2_reg;

assign cp_out_im_V_address1 = i_2_cast24_reg_1577;

assign cp_out_im_V_d0 = 16'd0;

assign cp_out_im_V_d1 = tem_out1_M_imag_q0;

assign cp_out_re_V_10_address0 = zext_ln224_fu_1255_p1;

assign cp_out_re_V_10_d0 = 1'd0;

assign cp_out_re_V_11_address0 = zext_ln224_fu_1255_p1;

assign cp_out_re_V_11_d0 = 1'd0;

assign cp_out_re_V_12_address0 = zext_ln224_fu_1255_p1;

assign cp_out_re_V_12_d0 = 1'd0;

assign cp_out_re_V_13_address0 = zext_ln224_fu_1255_p1;

assign cp_out_re_V_13_d0 = 1'd0;

assign cp_out_re_V_1_address0 = zext_ln224_reg_1690_pp0_iter2_reg;

assign cp_out_re_V_1_address1 = zext_ln184_1_fu_1321_p1;

assign cp_out_re_V_1_d0 = 16'd0;

assign cp_out_re_V_1_d1 = tem_out2_M_real_q0;

assign cp_out_re_V_2_address0 = zext_ln224_reg_1690_pp0_iter2_reg;

assign cp_out_re_V_2_address1 = zext_ln191_1_fu_1329_p1;

assign cp_out_re_V_2_d0 = 16'd0;

assign cp_out_re_V_2_d1 = tem_out3_M_real_q0;

assign cp_out_re_V_3_address0 = zext_ln224_reg_1690_pp0_iter2_reg;

assign cp_out_re_V_3_address1 = zext_ln198_1_fu_1338_p1;

assign cp_out_re_V_3_d0 = 16'd0;

assign cp_out_re_V_3_d1 = tem_out4_M_real_q0;

assign cp_out_re_V_4_address0 = zext_ln224_reg_1690_pp0_iter2_reg;

assign cp_out_re_V_4_address1 = zext_ln205_1_fu_1347_p1;

assign cp_out_re_V_4_d0 = 16'd0;

assign cp_out_re_V_4_d1 = tem_out5_M_real_q0;

assign cp_out_re_V_5_address0 = zext_ln224_reg_1690_pp0_iter2_reg;

assign cp_out_re_V_5_address1 = zext_ln212_1_fu_1356_p1;

assign cp_out_re_V_5_d0 = 16'd0;

assign cp_out_re_V_5_d1 = tem_out6_M_real_q0;

assign cp_out_re_V_6_address0 = zext_ln224_reg_1690_pp0_iter2_reg;

assign cp_out_re_V_6_address1 = zext_ln219_1_fu_1365_p1;

assign cp_out_re_V_6_d0 = 16'd0;

assign cp_out_re_V_6_d1 = tem_out7_M_real_q0;

assign cp_out_re_V_7_address0 = zext_ln224_fu_1255_p1;

assign cp_out_re_V_7_d0 = 1'd0;

assign cp_out_re_V_8_address0 = zext_ln224_fu_1255_p1;

assign cp_out_re_V_8_d0 = 1'd0;

assign cp_out_re_V_9_address0 = zext_ln224_fu_1255_p1;

assign cp_out_re_V_9_d0 = 1'd0;

assign cp_out_re_V_address0 = zext_ln224_reg_1690_pp0_iter2_reg;

assign cp_out_re_V_address1 = i_2_cast24_reg_1577;

assign cp_out_re_V_d0 = 16'd0;

assign cp_out_re_V_d1 = tem_out1_M_real_q0;

assign empty_fu_1021_p1 = i_2_fu_218[10:0];

assign i_2_cast24_fu_1037_p1 = i_2_fu_218;

assign icmp_ln171_1_fu_1292_p2 = ((add_ln171_1_fu_1286_p2 < 14'd1168) ? 1'b1 : 1'b0);

assign icmp_ln171_2_fu_1392_p2 = ((add_ln171_2_fu_1386_p2 < 14'd1168) ? 1'b1 : 1'b0);

assign icmp_ln171_3_fu_1412_p2 = ((add_ln171_3_fu_1406_p2 < 14'd1168) ? 1'b1 : 1'b0);

assign icmp_ln171_4_fu_1432_p2 = ((add_ln171_4_fu_1426_p2 < 14'd1168) ? 1'b1 : 1'b0);

assign icmp_ln171_5_fu_1452_p2 = ((add_ln171_5_fu_1446_p2 < 14'd1168) ? 1'b1 : 1'b0);

assign icmp_ln171_6_fu_1472_p2 = ((add_ln171_6_fu_1466_p2 < 14'd1168) ? 1'b1 : 1'b0);

assign icmp_ln171_fu_1025_p2 = ((i_2_fu_218 == 14'd16352) ? 1'b1 : 1'b0);

assign icmp_ln173_fu_1043_p2 = ((i_2_fu_218 < 14'd1168) ? 1'b1 : 1'b0);

assign icmp_ln180_1_fu_1055_p2 = ((i_2_fu_218 < 14'd2336) ? 1'b1 : 1'b0);

assign icmp_ln180_fu_1049_p2 = ((i_2_fu_218 > 14'd1167) ? 1'b1 : 1'b0);

assign icmp_ln187_1_fu_1093_p2 = ((i_2_fu_218 < 14'd3504) ? 1'b1 : 1'b0);

assign icmp_ln187_fu_1087_p2 = ((i_2_fu_218 > 14'd2335) ? 1'b1 : 1'b0);

assign icmp_ln194_1_fu_1123_p2 = ((i_2_fu_218 < 14'd4672) ? 1'b1 : 1'b0);

assign icmp_ln194_fu_1117_p2 = ((i_2_fu_218 > 14'd3503) ? 1'b1 : 1'b0);

assign icmp_ln201_1_fu_1153_p2 = ((i_2_fu_218 < 14'd5840) ? 1'b1 : 1'b0);

assign icmp_ln201_fu_1147_p2 = ((i_2_fu_218 > 14'd4671) ? 1'b1 : 1'b0);

assign icmp_ln208_1_fu_1183_p2 = ((i_2_fu_218 < 14'd7008) ? 1'b1 : 1'b0);

assign icmp_ln208_fu_1177_p2 = ((i_2_fu_218 > 14'd5839) ? 1'b1 : 1'b0);

assign icmp_ln215_1_fu_1213_p2 = ((i_2_fu_218 < 14'd8176) ? 1'b1 : 1'b0);

assign icmp_ln215_fu_1207_p2 = ((i_2_fu_218 > 14'd7007) ? 1'b1 : 1'b0);

assign icmp_ln222_fu_1240_p2 = ((i_2_fu_218 > 14'd8175) ? 1'b1 : 1'b0);

assign select_ln171_1_fu_1398_p3 = ((icmp_ln171_2_fu_1392_p2[0:0] == 1'b1) ? add_ln171_2_fu_1386_p2 : 14'd0);

assign select_ln171_2_fu_1418_p3 = ((icmp_ln171_3_fu_1412_p2[0:0] == 1'b1) ? add_ln171_3_fu_1406_p2 : 14'd0);

assign select_ln171_3_fu_1438_p3 = ((icmp_ln171_4_fu_1432_p2[0:0] == 1'b1) ? add_ln171_4_fu_1426_p2 : 14'd0);

assign select_ln171_4_fu_1458_p3 = ((icmp_ln171_5_fu_1452_p2[0:0] == 1'b1) ? add_ln171_5_fu_1446_p2 : 14'd0);

assign select_ln171_5_fu_1478_p3 = ((icmp_ln171_6_fu_1472_p2[0:0] == 1'b1) ? add_ln171_6_fu_1466_p2 : 14'd0);

assign select_ln171_fu_1298_p3 = ((icmp_ln171_1_fu_1292_p2[0:0] == 1'b1) ? add_ln171_1_fu_1286_p2 : 14'd0);

assign select_ln184_fu_1079_p3 = ((icmp_ln173_fu_1043_p2[0:0] == 1'b1) ? empty_fu_1021_p1 : add_ln184_fu_1067_p2);

assign tem_out1_M_imag_address0 = i_2_cast24_fu_1037_p1;

assign tem_out1_M_real_address0 = i_2_cast24_fu_1037_p1;

assign tem_out2_M_imag_address0 = zext_ln184_fu_1073_p1;

assign tem_out2_M_real_address0 = zext_ln184_fu_1073_p1;

assign tem_out3_M_imag_address0 = zext_ln191_fu_1111_p1;

assign tem_out3_M_real_address0 = zext_ln191_fu_1111_p1;

assign tem_out4_M_imag_address0 = zext_ln198_fu_1141_p1;

assign tem_out4_M_real_address0 = zext_ln198_fu_1141_p1;

assign tem_out5_M_imag_address0 = zext_ln205_fu_1171_p1;

assign tem_out5_M_real_address0 = zext_ln205_fu_1171_p1;

assign tem_out6_M_imag_address0 = zext_ln212_fu_1201_p1;

assign tem_out6_M_real_address0 = zext_ln212_fu_1201_p1;

assign tem_out7_M_imag_address0 = zext_ln219_fu_1231_p1;

assign tem_out7_M_real_address0 = zext_ln219_fu_1231_p1;

assign trunc_ln2_fu_1273_p4 = {{phi_mul_fu_214[28:25]}};

assign zext_ln184_1_fu_1321_p1 = select_ln184_reg_1601;

assign zext_ln184_fu_1073_p1 = add_ln184_fu_1067_p2;

assign zext_ln191_1_fu_1329_p1 = phi_urem_fu_210;

assign zext_ln191_fu_1111_p1 = add_ln191_fu_1105_p2;

assign zext_ln198_1_fu_1338_p1 = phi_urem3_fu_206;

assign zext_ln198_fu_1141_p1 = add_ln198_fu_1135_p2;

assign zext_ln205_1_fu_1347_p1 = phi_urem6_fu_202;

assign zext_ln205_fu_1171_p1 = add_ln205_fu_1165_p2;

assign zext_ln212_1_fu_1356_p1 = phi_urem9_fu_198;

assign zext_ln212_fu_1201_p1 = add_ln212_fu_1195_p2;

assign zext_ln219_1_fu_1365_p1 = phi_urem12_fu_194;

assign zext_ln219_fu_1231_p1 = add_ln219_fu_1225_p2;

assign zext_ln224_fu_1255_p1 = phi_urem15_fu_190;

always @ (posedge ap_clk) begin
    i_2_cast24_reg_1577[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln224_reg_1690[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln224_reg_1690_pp0_iter2_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
end

endmodule //top_tx_top_tx_Pipeline_loop_output
